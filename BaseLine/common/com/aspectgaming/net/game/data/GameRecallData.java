// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from GameProtocol.proto

package com.aspectgaming.net.game.data;

import io.protostuff.GraphIOUtil;
import io.protostuff.Input;
import io.protostuff.Message;
import io.protostuff.Output;
import io.protostuff.Schema;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

public final class GameRecallData implements Externalizable, Message<GameRecallData>, Schema<GameRecallData> {

    public static Schema<GameRecallData> getSchema() {
        return DEFAULT_INSTANCE;
    }

    public static GameRecallData getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    static final GameRecallData DEFAULT_INSTANCE = new GameRecallData();

    public ContextData Context;
    public String Type;
    public String Value;
    public int baseGameIndex;
    public int freeGameIndex;
    public int gameCount;

    public GameRecallData() {}

    @Override
    public String toString() {
        return "GameRecallData{" + "context=" + Context + ", type=" + Type + ", value=" + Value + ", baseGameIndex="+baseGameIndex+", freeGameIndex="+freeGameIndex+", gameCount:"+gameCount+"}";
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<GameRecallData> cachedSchema() {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public GameRecallData newMessage() {
        return new GameRecallData();
    }

    public Class<GameRecallData> typeClass() {
        return GameRecallData.class;
    }

    public String messageName() {
        return GameRecallData.class.getSimpleName();
    }

    public String messageFullName() {
        return GameRecallData.class.getName();
    }

    public boolean isInitialized(GameRecallData message) {
        return true;
    }

    public void mergeFrom(Input input, GameRecallData message) throws IOException {
        for (int number = input.readFieldNumber(this);; number = input.readFieldNumber(this)) {
            switch (number) {
            case 0:
                return;
            case 1:
                message.Context = input.mergeObject(message.Context, ContextData.getSchema());
                break;
            case 2:
                message.Type = input.readString();
                break;
            case 3:
                message.Value = input.readString();
                break;
            case 4:
                message.baseGameIndex = input.readInt32();
                break;
            case 5:
                message.freeGameIndex = input.readInt32();
                break;
            case 6:
                message.gameCount = input.readInt32();
                break;
            default:
                input.handleUnknownField(number, this);
            }
        }
    }

    public void writeTo(Output output, GameRecallData message) throws IOException {
        if (message.Context != null) output.writeObject(1, message.Context, ContextData.getSchema(), false);

        if (message.Type != null) output.writeString(2, message.Type, false);

        if (message.Value != null) output.writeString(3, message.Value, false);

        output.writeInt32(4, message.baseGameIndex, false);

        output.writeInt32(5, message.freeGameIndex, false);

        output.writeInt32(6, message.gameCount, false);
    }

    public String getFieldName(int number) {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name) {
        return Integer.parseInt(name);
    }

}
