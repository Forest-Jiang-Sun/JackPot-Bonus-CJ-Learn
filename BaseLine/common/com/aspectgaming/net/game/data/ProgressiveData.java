// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from GameProtocol.proto

package com.aspectgaming.net.game.data;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import io.protostuff.GraphIOUtil;
import io.protostuff.Input;
import io.protostuff.Message;
import io.protostuff.Output;
import io.protostuff.Schema;

public final class ProgressiveData implements Externalizable, Message<ProgressiveData>, Schema<ProgressiveData> {

    public static Schema<ProgressiveData> getSchema() {
        return DEFAULT_INSTANCE;
    }

    public static ProgressiveData getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    static final ProgressiveData DEFAULT_INSTANCE = new ProgressiveData();

    public int Level;
    public int Type;
    public int Mask;
    public long Win;

    public ProgressiveData() {}

    @Override
    public String toString() {
        return "ProgressiveData{" +
                    "level=" + Level +
                    ", type=" + Type +
                    ", mask=" + Mask +
                    ", win=" + Win +
                '}';
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<ProgressiveData> cachedSchema() {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public ProgressiveData newMessage() {
        return new ProgressiveData();
    }

    public Class<ProgressiveData> typeClass() {
        return ProgressiveData.class;
    }

    public String messageName() {
        return ProgressiveData.class.getSimpleName();
    }

    public String messageFullName() {
        return ProgressiveData.class.getName();
    }

    public boolean isInitialized(ProgressiveData message) {
        return true;
    }

    public void mergeFrom(Input input, ProgressiveData message) throws IOException {
        for (int number = input.readFieldNumber(this);; number = input.readFieldNumber(this)) {
            switch (number) {
            case 0:
                return;
            case 1:
                message.Level = input.readInt32();
                break;
            case 2:
                message.Type = input.readInt32();
                break;
            case 3:
                message.Mask = input.readInt32();
                break;
            case 4:
                message.Win = input.readInt64();
                break;
            default:
                input.handleUnknownField(number, this);
            }
        }
    }

    public void writeTo(Output output, ProgressiveData message) throws IOException {
        if (message.Level != 0) output.writeInt32(1, message.Level, false);

        if (message.Type != 0) output.writeInt32(2, message.Type, false);

        if (message.Mask != 0) output.writeInt32(3, message.Mask, false);

        if (message.Win != 0) output.writeInt64(4, message.Win, false);
    }

    public String getFieldName(int number) {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name) {
        return Integer.parseInt(name);
    }

}
