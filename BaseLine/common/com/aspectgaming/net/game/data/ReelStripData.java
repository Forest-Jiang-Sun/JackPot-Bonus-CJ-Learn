// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from GameProtocol.proto

package com.aspectgaming.net.game.data;

import io.protostuff.GraphIOUtil;
import io.protostuff.Input;
import io.protostuff.Message;
import io.protostuff.Output;
import io.protostuff.Schema;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.ArrayList;
import java.util.List;

import com.aspectgaming.net.ProtoUtil;

public final class ReelStripData implements Externalizable, Message<ReelStripData>, Schema<ReelStripData> {

    public static Schema<ReelStripData> getSchema() {
        return DEFAULT_INSTANCE;
    }

    public static ReelStripData getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    static final ReelStripData DEFAULT_INSTANCE = new ReelStripData();

    public String Paytable;
    public int ReelIndex;
    public String Type;
    public int Selection;
    public int[] Symbols;

    public ReelStripData() {}

    @Override
    public String toString() {
        return "ReelStripData{" +
                    "paytable=" + Paytable +
                    ", reelIndex=" + ReelIndex +
                    ", type=" + Type +
                    ", selection=" + Selection +
                    ", symbols=" + Symbols +
                '}';
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<ReelStripData> cachedSchema() {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public ReelStripData newMessage() {
        return new ReelStripData();
    }

    public Class<ReelStripData> typeClass() {
        return ReelStripData.class;
    }

    public String messageName() {
        return ReelStripData.class.getSimpleName();
    }

    public String messageFullName() {
        return ReelStripData.class.getName();
    }

    public boolean isInitialized(ReelStripData message) {
        return true;
    }

    public void mergeFrom(Input input, ReelStripData message) throws IOException {
        List<Integer> Symbols = null;
        try {
            for (int number = input.readFieldNumber(this);; number = input.readFieldNumber(this)) {
                switch (number) {
                case 0:
                    return;
                case 1:
                    message.Paytable = input.readString();
                    break;
                case 2:
                    message.ReelIndex = input.readInt32();
                    break;
                case 3:
                    message.Type = input.readString();
                    break;
                case 4:
                    message.Selection = input.readInt32();
                    break;
                case 5:
                    if (Symbols == null) Symbols = new ArrayList<Integer>();
                    Symbols.add(input.readInt32());
                    break;
                default:
                    input.handleUnknownField(number, this);
                }
            }
        } finally {
            message.Symbols = ProtoUtil.toIntArray(Symbols);
        }
    }

    public void writeTo(Output output, ReelStripData message) throws IOException {
        if (message.Paytable != null) output.writeString(1, message.Paytable, false);

        if (message.ReelIndex != 0) output.writeInt32(2, message.ReelIndex, false);

        if (message.Type != null) output.writeString(3, message.Type, false);

        if (message.Selection != 0) output.writeInt32(4, message.Selection, false);

        if (message.Symbols != null) {
            for (Integer symbols : message.Symbols) {
                if (symbols != null) output.writeInt32(5, symbols, true);
            }
        }
    }

    public String getFieldName(int number) {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name) {
        return Integer.parseInt(name);
    }

}
