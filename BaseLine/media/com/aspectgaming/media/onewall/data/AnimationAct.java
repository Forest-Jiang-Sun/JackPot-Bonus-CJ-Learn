// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from OneWallProtocol.proto

package com.aspectgaming.media.onewall.data;

import javax.annotation.Generated;
import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import io.protostuff.GraphIOUtil;
import io.protostuff.Input;
import io.protostuff.Message;
import io.protostuff.Output;
import io.protostuff.Schema;

@Generated("java_bean")
public final class AnimationAct implements Externalizable, Message<AnimationAct>, Schema<AnimationAct>
{

    public static Schema<AnimationAct> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static AnimationAct getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final AnimationAct DEFAULT_INSTANCE = new AnimationAct();

    
    private String name;
    private long startTime;
    private long duration;

    public AnimationAct()
    {

    }

    @Override
    public String toString() {
        return "AnimationAct{" +
                    "name=" + name +
                    ", startTime=" + startTime +
                    ", duration=" + duration +
                '}';
    }
    // getters and setters

    // name

    public String getName()
    {
        return name;
    }


    public void setName(String name)
    {
        this.name = name;
    }

    // startTime

    public long getStartTime()
    {
        return startTime;
    }


    public void setStartTime(long startTime)
    {
        this.startTime = startTime;
    }

    // duration

    public long getDuration()
    {
        return duration;
    }


    public void setDuration(long duration)
    {
        this.duration = duration;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<AnimationAct> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public AnimationAct newMessage()
    {
        return new AnimationAct();
    }

    public Class<AnimationAct> typeClass()
    {
        return AnimationAct.class;
    }

    public String messageName()
    {
        return AnimationAct.class.getSimpleName();
    }

    public String messageFullName()
    {
        return AnimationAct.class.getName();
    }

    public boolean isInitialized(AnimationAct message)
    {
        return true;
    }

    public void mergeFrom(Input input, AnimationAct message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 1:
                    message.name = input.readString();
                    break;
                case 2:
                    message.startTime = input.readInt64();
                    break;
                case 3:
                    message.duration = input.readInt64();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, AnimationAct message) throws IOException
    {
        if(message.name != null)
            output.writeString(1, message.name, false);

        if(message.startTime != 0)
            output.writeInt64(2, message.startTime, false);

        if(message.duration != 0)
            output.writeInt64(3, message.duration, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
